USE DATABASE CONTAINERS_DB;
USE SCHEMA CONTAINERS_DB.SIMPLE_WIKI_SEARCH;
USE WAREHOUSE SIMPLE_WIKI_WH;

CREATE STAGE IF NOT EXISTS specs ENCRYPTION = (TYPE='SNOWFLAKE_SSE');
CREATE STAGE IF NOT EXISTS models ENCRYPTION = (TYPE='SNOWFLAKE_SSE');
CREATE STAGE IF NOT EXISTS notebooks ENCRYPTION = (TYPE='SNOWFLAKE_SSE');
CREATE STAGE IF NOT EXISTS data ENCRYPTION = (TYPE='SNOWFLAKE_SSE');
CREATE IMAGE REPOSITORY IF NOT EXISTS images;
// get the repository_url and add it to .env
// also, login in the console:
// docker login repository_url -u containers_user
SHOW IMAGE REPOSITORIES IN SCHEMA CONTAINERS_DB.SIMPLE_WIKI_SEARCH;
// docker compose build
// docker compose push simple-wiki-jupyter-sf
DESCRIBE COMPUTE POOL SIMPLE_WIKI_POOL_XS;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_XS SUSPEND;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_XS RESUME;
DESCRIBE COMPUTE POOL SIMPLE_WIKI_POOL_GPU_S;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_GPU_S SUSPEND;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_GPU_S RESUME;

DESCRIBE COMPUTE POOL SIMPLE_WIKI_POOL_GPU_M;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_GPU_M SUSPEND;
-- ALTER COMPUTE POOL SIMPLE_WIKI_POOL_GPU_M RESUME;










DROP SERVICE IF EXISTS CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU;
-- upload simple-wiki-jupyter-service_one-gpu.yml to @specs
CREATE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU
IN COMPUTE POOL SIMPLE_WIKI_POOL_XS
FROM @specs
SPEC='simple-wiki-jupyter-service_cpu.yml'
EXTERNAL_ACCESS_INTEGRATIONS = (SIMPLE_WIKI_ACCESS_INTEGRATION);
;

SHOW SERVICES IN SCHEMA CONTAINERS_DB.SIMPLE_WIKI_SEARCH;
DESCRIBE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU;

CALL SYSTEM$GET_SERVICE_STATUS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU');
CALL SYSTEM$GET_SERVICE_LOGS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU', '0', 'simple-wiki-jupyter-service-cpu', 100);

ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU SUSPEND ;
ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_CPU RESUME ;





DROP SERVICE IF EXISTS CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU;
-- upload simple-wiki-jupyter-service_one-gpu.yml to @specs
CREATE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU
IN COMPUTE POOL SIMPLE_WIKI_POOL_GPU_S
FROM @specs
SPEC='simple-wiki-jupyter-service_one-gpu.yml'
EXTERNAL_ACCESS_INTEGRATIONS = (SIMPLE_WIKI_ACCESS_INTEGRATION);
;

SHOW SERVICES IN SCHEMA CONTAINERS_DB.SIMPLE_WIKI_SEARCH;
DESCRIBE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU;

CALL SYSTEM$GET_SERVICE_STATUS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU');
CALL SYSTEM$GET_SERVICE_LOGS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU', '0', 'simple-wiki-jupyter-service-one-gpu', 100);

ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU SUSPEND ;
ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU RESUME ;





DROP SERVICE IF EXISTS CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_FOUR_GPU;
-- upload simple-wiki-jupyter-service_one-gpu.yml to @specs
CREATE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_FOUR_GPU
IN COMPUTE POOL SIMPLE_WIKI_POOL_GPU_M
FROM @specs
SPEC='simple-wiki-jupyter-service_four-gpu.yml'
EXTERNAL_ACCESS_INTEGRATIONS = (SIMPLE_WIKI_ACCESS_INTEGRATION);
;

SHOW SERVICES IN SCHEMA CONTAINERS_DB.SIMPLE_WIKI_SEARCH;

DESCRIBE SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_FOUR_GPU;

CALL SYSTEM$GET_SERVICE_STATUS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_FOUR_GPU');
CALL SYSTEM$GET_SERVICE_LOGS('CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_FOUR_GPU', '0', 'simple-wiki-jupyter-service-four-gpu', 100);

ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU SUSPEND ;
ALTER SERVICE CONTAINERS_DB.SIMPLE_WIKI_SEARCH.SIMPLE_WIKI_JUPYTER_SERVICE_ONE_GPU RESUME ;
